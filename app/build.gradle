plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.1.20'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.2.0'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    namespace 'com.example.manageproducts'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.manageproducts"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        buildConfigField("String", "API_KEY", "\"${properties.getProperty("API_KEY")}\"")
        buildConfigField("String", "SECRET", "\"${properties.getProperty("SECRET")}\"")
        buildConfigField("String", "SUPABASE_URL", "\"${properties.getProperty("SUPABASE_URL")}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$androidx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material3:material3:$material3_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_verison"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation "androidx.compose.material:material:$material_version"

    // Supabase setup
    implementation(platform("io.github.jan-tennert.supabase:bom:$supabase_version"))
    implementation "io.github.jan-tennert.supabase:gotrue-kt"
    implementation "io.github.jan-tennert.supabase:postgrest-kt"
    implementation "io.github.jan-tennert.supabase:storage-kt"

    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-utils:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.coil-kt:coil-compose:$coil_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    annotationProcessor "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"

    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    androidTestAnnotationProcessor "com.google.dagger:hilt-compiler:$hilt_version"
    kapt ("com.google.dagger:hilt-compiler:$hilt_version")

    implementation "com.google.android.gms:play-services-auth:$playservice_version"

    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"
    implementation 'com.google.accompanist:accompanist-swiperefresh:0.24.13-rc'
}
